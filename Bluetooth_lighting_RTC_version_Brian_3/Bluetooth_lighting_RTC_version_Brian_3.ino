/*
2024.01.15 Brian
藍芽版本節律照明
需外接RTC模組
app 連上ESP32藍芽後, 自動校正ESP32 RTC時間
預設開啟節律模式
切換模式時, 自動關閉其他模式

*/

// 引入ESP32開發板的庫
#include <Arduino.h>
#include <BluetoothSerial.h>
#include <Wire.h>
#include <RTClib.h>
#include <cmath>

RTC_DS3231 rtc;
BluetoothSerial ESP_BT;
TaskHandle_t showmodeTask;
volatile bool shouldExitBluetoothTask = true;

// 四色燈pin腳
const int ledPin_yellow = 15;
const int ledPin_green = 2;
const int ledPin_red = 4;
const int ledPin_other = 23;

// RTC時間、節律相關變數
int hours, minutes;
bool circadianMode = true;
void getCurrentTime(int &hours, int &minutes);

//手機端藍芽資料輸出
int input;  //模式+資料值
int inputType;
int value;
unsigned int lifeTime;

int settingRow;  // pin value 設定位址 (第幾列)
int cmode[781][4] = {
 {0, 0, 12, 4}, //6:00
 {0, 0, 24, 8}, //6:01
 {0, 0, 36, 12}, //6:02
 {0, 0, 48, 16}, //6:03
 {0, 0, 60, 20}, //6:04
 {0, 0, 72, 24}, //6:05
 {0, 0, 84, 28}, //6:06
 {0, 0, 96, 32}, //6:07
 {0, 0, 108, 36}, //6:08
 {0, 0, 120, 40}, //6:09
 {0, 0, 130, 38}, //6:10
 {0, 0, 131, 36}, //6:11
 {0, 0, 132, 34}, //6:12
 {0, 0, 133, 32}, //6:13
 {0, 0, 134, 30}, //6:14
 {0, 0, 135, 28}, //6:15
 {0, 0, 136, 27}, //6:16
 {0, 0, 137, 26}, //6:17
 {0, 0, 138, 26}, //6:18
 {0, 0, 139, 25}, //6:19
 {0, 0, 140, 25}, //6:20
 {0, 0, 141, 24}, //6:21
 {0, 0, 142, 23}, //6:22
 {0, 0, 143, 23}, //6:23
 {0, 0, 144, 22}, //6:24
 {0, 0, 145, 22}, //6:25
 {0, 0, 146, 21}, //6:26
 {0, 0, 147, 20}, //6:27
 {0, 0, 148, 19}, //6:28
 {0, 0, 149, 19}, //6:29
 {0, 0, 150, 18}, //6:30
 {0, 0, 151, 18}, //6:31
 {0, 0, 152, 17}, //6:32
 {0, 0, 153, 16}, //6:33
 {0, 0, 154, 16}, //6:34
 {0, 0, 155, 15}, //6:35
 {0, 0, 156, 15}, //6:36
 {0, 0, 157, 14}, //6:37
 {0, 0, 158, 14}, //6:38
 {0, 0, 159, 13}, //6:39
 {0, 0, 160, 12}, //6:40
 {0, 0, 161, 12}, //6:41
 {0, 0, 162, 11}, //6:42
 {0, 0, 163, 11}, //6:43
 {0, 0, 164, 10}, //6:44
 {0, 0, 165, 10}, //6:45
 {0, 0, 166, 9}, //6:46
 {0, 0, 167, 8}, //6:47
 {0, 0, 168, 8}, //6:48
 {0, 0, 169, 7}, //6:49
 {0, 0, 170, 7}, //6:50
 {0, 0, 171, 6}, //6:51
 {0, 0, 172, 5}, //6:52
 {0, 0, 173, 5}, //6:53
 {0, 0, 174, 4}, //6:54
 {0, 0, 175, 4}, //6:55
 {0, 0, 176, 3}, //6:56
 {0, 0, 177, 2}, //6:57
 {0, 0, 178, 1}, //6:58
 {0, 0, 179, 1}, //6:59

 {0, 0, 180, 0}, //7:00
 {0, 4, 177, 0}, //7:01
 {0, 8, 174, 0}, //7:02
 {0, 12, 171, 0}, //7:03
 {0, 16, 168, 0}, //7:04
 {0, 20, 165, 0}, //7:05
 {0, 24, 162, 0}, //7:06
 {0, 28, 159, 0}, //7:07
 {0, 32, 156, 0}, //7:08
 {0, 36, 153, 0}, //7:09
 {0, 40, 150, 0}, //7:10
 {0, 44, 147, 0}, //7:11
 {0, 48, 144, 0}, //7:12
 {0, 52, 141, 0}, //7:13
 {0, 56, 138, 0}, //7:14
 {0, 60, 135, 0}, //7:15
 {0, 64, 132, 0}, //7:16
 {0, 68, 129, 0}, //7:17
 {0, 72, 126, 0}, //7:18
 {0, 76, 123, 0}, //7:19 
 {0, 80, 120, 0}, //7:20
 {0, 84, 119, 0}, //7:21
 {0, 88, 116, 0}, //7:22
 {0, 92, 113, 0}, //7:23
 {0, 96, 110, 0}, //7:24
 {0, 100, 107, 0}, //7:25
 {0, 104, 104, 0}, //7:26
 {0, 108, 101, 0}, //7:27
 {0, 112, 98, 0}, //7:28 
 {0, 116, 95, 0}, //7:29
 {0, 120, 92, 0}, //7:30
 {0, 124, 89, 0}, //7:31
 {0, 128, 86, 0}, //7:32
 {0, 132, 83, 0}, //7:33
 {0, 136, 80, 0}, //7:34
 {0, 140, 77, 0}, //7:35
 {0, 144, 74, 0}, //7:36
 {0, 148, 71, 0}, //7:37 
 {0, 152, 68, 0}, //7:38
 {0, 156, 65, 0}, //7:39
 {0, 160, 62, 0}, //7:40
 {0, 164, 59, 0}, //7:41
 {0, 168, 56, 0}, //7:42
 {0, 172, 53, 0}, //7:43
 {0, 176, 50, 0}, //7:44
 {0, 180, 47, 0}, //7:45
 {0, 184, 44, 0}, //7:46 
 {0, 188, 41, 0}, //7:47
 {0, 192, 38, 0}, //7:48
 {0, 196, 35, 0}, //7:49
 {0, 200, 32, 0}, //7:50
 {0, 204, 29, 0}, //7:51
 {0, 208, 26, 0}, //7:52
 {0, 212, 23, 0}, //7:53
 {0, 216, 20, 0}, //7:54
 {0, 220, 17, 0}, //7:55
 {0, 224, 14, 0}, //7:56
 {0, 228, 11, 0}, //7:57
 {0, 232, 8, 0}, //7:58
 {0, 236, 5, 0}, //7:59

 {0, 240, 0, 0}, //8:00
 {1, 240, 0, 0}, //8:01
 {2, 239, 0, 0}, //8:02
 {3, 239, 0, 0}, //8:03
 {4, 238, 0, 0}, //8:04
 {5, 238, 0, 0}, //8:05
 {6, 237, 0, 0}, //8:06
 {7, 237, 0, 0}, //8:07
 {8, 236, 0, 0}, //8:08
 {9, 236, 0, 0}, //8:09
 {10, 235, 0, 0}, //8:10
 {11, 235, 0, 0}, //8:11
 {12, 234, 0, 0}, //8:12
 {13, 234, 0, 0}, //8:13
 {14, 233, 0, 0}, //8:14
 {15, 233, 0, 0}, //8:15
 {16, 232, 0, 0}, //8:16
 {17, 232, 0, 0}, //8:17
 {18, 231, 0, 0}, //8:18
 {19, 231, 0, 0}, //8:19
 {20, 230, 0, 0}, //8:20
 {21, 230, 0, 0}, //8:21
 {22, 229, 0, 0}, //8:22
 {23, 229, 0, 0}, //8:23
 {24, 228, 0, 0}, //8:24
 {25, 228, 0, 0}, //8:25
 {26, 227, 0, 0}, //8:26
 {27, 227, 0, 0}, //8:27
 {28, 226, 0, 0}, //8:28
 {29, 226, 0, 0}, //8:29
 {30, 225, 0, 0}, //8:30
 {32, 225, 0, 0}, //8:31
 {34, 224, 0, 0}, //8:32
 {36, 224, 0, 0}, //8:33
 {38, 223, 0, 0}, //8:34
 {40, 223, 0, 0}, //8:35
 {42, 222, 0, 0}, //8:36
 {44, 222, 0, 0}, //8:37
 {46, 221, 0, 0}, //8:38
 {48, 221, 0, 0}, //8:39
 {50, 220, 0, 0}, //8:40
 {52, 220, 0, 0}, //8:41
 {54, 219, 0, 0}, //8:42
 {56, 219, 0, 0}, //8:43
 {58, 218, 0, 0}, //8:44
 {60, 218, 0, 0}, //8:45
 {62, 217, 0, 0}, //8:46
 {64, 217, 0, 0}, //8:47
 {66, 216, 0, 0}, //8:48
 {68, 216, 0, 0}, //8:49
 {70, 215, 0, 0}, //8:50
 {72, 215, 0, 0}, //8:51
 {74, 214, 0, 0}, //8:52
 {76, 214, 0, 0}, //8:53
 {78, 213, 0, 0}, //8:54
 {80, 213, 0, 0}, //8:55
 {82, 212, 0, 0}, //8:56
 {84, 212, 0, 0}, //8:57
 {86, 211, 0, 0}, //8:58
 {88, 211, 0, 0}, //8:59

 {90, 210, 0, 0}, //9:00
 {92, 210, 0, 0}, //9:01
 {94, 209, 0, 0}, //9:02
 {96, 209, 0, 0}, //9:03
 {98, 208, 0, 0}, //9:04
 {100, 208, 0, 0}, //9:05
 {102, 207, 0, 0}, //9:06
 {104, 207, 0, 0}, //9:07
 {106, 206, 0, 0}, //9:08
 {108, 206, 0, 0}, //9:09
 {110, 205, 0, 0}, //9:10
 {112, 205, 0, 0}, //9:11
 {114, 204, 0, 0}, //9:12
 {116, 204, 0, 0}, //9:13
 {118, 203, 0, 0}, //9:14
 {120, 203, 0, 0}, //9:15
 {122, 202, 0, 0}, //9:16
 {124, 202, 0, 0}, //9:17
 {126, 201, 0, 0}, //9:18
 {128, 201, 0, 0}, //9:19
 {130, 200, 0, 0}, //9:20
 {132, 200, 0, 0}, //9:21
 {134, 199, 0, 0}, //9:22
 {136, 199, 0, 0}, //9:23
 {138, 198, 0, 0}, //9:24
 {140, 198, 0, 0}, //9:25
 {142, 197, 0, 0}, //9:26
 {144, 197, 0, 0}, //9:27
 {146, 196, 0, 0}, //9:28
 {148, 196, 0, 0}, //9:29
 {150, 195, 0, 0}, //9:30
 {152, 195, 0, 0}, //9:31
 {154, 194, 0, 0}, //9:32
 {156, 194, 0, 0}, //9:33
 {158, 193, 0, 0}, //9:34
 {160, 193, 0, 0}, //9:35
 {162, 192, 0, 0}, //9:36
 {164, 192, 0, 0}, //9:37
 {166, 191, 0, 0}, //9:38
 {168, 191, 0, 0}, //9:39
 {170, 190, 0, 0}, //9:40
 {172, 190, 0, 0}, //9:41
 {174, 189, 0, 0}, //9:42
 {176, 189, 0, 0}, //9:43
 {178, 188, 0, 0}, //9:44
 {180, 188, 0, 0}, //9:45
 {182, 187, 0, 0}, //9:46
 {184, 187, 0, 0}, //9:47
 {186, 186, 0, 0}, //9:48
 {188, 186, 0, 0}, //9:49
 {190, 185, 0, 0}, //9:50
 {192, 185, 0, 0}, //9:51
 {194, 184, 0, 0}, //9:52
 {196, 184, 0, 0}, //9:53
 {198, 183, 0, 0}, //9:54
 {200, 183, 0, 0}, //9:55
 {202, 182, 0, 0}, //9:56
 {204, 182, 0, 0}, //9:57
 {206, 181, 0, 0}, //9:58
 {208, 181, 0, 0}, //9:59

 {210, 180, 0, 0}, //10:00
 {210, 178, 0, 0}, //10:01
 {211, 176, 0, 0}, //10:02
 {211, 174, 0, 0}, //10:03
 {212, 172, 0, 0}, //10:04
 {212, 170, 0, 0}, //10:05
 {213, 168, 0, 0}, //10:06
 {213, 166, 0, 0}, //10:07
 {214, 164, 0, 0}, //10:08
 {214, 162, 0, 0}, //10:09
 {215, 160, 0, 0}, //10:10
 {215, 158, 0, 0}, //10:11
 {216, 156, 0, 0}, //10:12
 {216, 154, 0, 0}, //10:13
 {217, 152, 0, 0}, //10:14
 {217, 150, 0, 0}, //10:15
 {218, 148, 0, 0}, //10:16
 {218, 146, 0, 0}, //10:17
 {219, 144, 0, 0}, //10:18
 {219, 142, 0, 0}, //10:19
 {220, 140, 0, 0}, //10:20
 {220, 138, 0, 0}, //10:21
 {221, 136, 0, 0}, //10:22
 {221, 134, 0, 0}, //10:23
 {222, 132, 0, 0}, //10:24
 {222, 130, 0, 0}, //10:25
 {223, 128, 0, 0}, //10:26
 {223, 126, 0, 0}, //10:27
 {224, 124, 0, 0}, //10:28
 {224, 122, 0, 0}, //10:29
 {225, 120, 0, 0}, //10:30
 {225, 119, 0, 0}, //10:31
 {226, 118, 0, 0}, //10:32
 {226, 117, 0, 0}, //10:33
 {227, 116, 0, 0}, //10:34
 {227, 115, 0, 0}, //10:35
 {228, 114, 0, 0}, //10:36
 {228, 113, 0, 0}, //10:37
 {229, 112, 0, 0}, //10:38
 {229, 111, 0, 0}, //10:39
 {230, 110, 0, 0}, //10:40
 {230, 109, 0, 0}, //10:41
 {231, 108, 0, 0}, //10:42
 {231, 107, 0, 0}, //10:43
 {232, 106, 0, 0}, //10:44
 {232, 105, 0, 0}, //10:45
 {233, 104, 0, 0}, //10:46
 {233, 103, 0, 0}, //10:47
 {234, 102, 0, 0}, //10:48
 {234, 101, 0, 0}, //10:49
 {235, 100, 0, 0}, //10:50
 {235, 99, 0, 0}, //10:51
 {236, 98, 0, 0}, //10:52
 {236, 97, 0, 0}, //10:53
 {237, 96, 0, 0}, //10:54
 {237, 95, 0, 0}, //10:55
 {238, 94, 0, 0}, //10:56
 {238, 93, 0, 0}, //10:57
 {239, 92, 0, 0}, //10:58
 {239, 91, 0, 0}, //10:59

 {240, 90, 0, 0}, //11:00
 {240, 88, 0, 0}, //11:01
 {240, 86, 0, 0}, //11:02
 {240, 84, 0, 0}, //11:03
 {240, 82, 0, 0}, //11:04
 {240, 80, 0, 0}, //11:05
 {241, 78, 0, 0}, //11:06
 {241, 76, 0, 0}, //11:07
 {241, 74, 0, 0}, //11:08
 {241, 72, 0, 0}, //11:09
 {241, 70, 0, 0}, //11:10
 {241, 68, 0, 0}, //11:11
 {242, 66, 0, 0}, //11:12
 {242, 64, 0, 0}, //11:13
 {242, 62, 0, 0}, //11:14
 {242, 60, 0, 0}, //11:15
 {242, 58, 0, 0}, //11:16
 {242, 56, 0, 0}, //11:17
 {243, 54, 0, 0}, //11:18
 {243, 52, 0, 0}, //11:19
 {243, 50, 0, 0}, //11:20
 {243, 48, 0, 0}, //11:21
 {243, 46, 0, 0}, //11:22
 {243, 44, 0, 0}, //11:23
 {244, 42, 0, 0}, //11:24
 {244, 40, 0, 0}, //11:25
 {244, 38, 0, 0}, //11:26
 {244, 36, 0, 0}, //11:27
 {244, 34, 0, 0}, //11:28
 {244, 32, 0, 0}, //11:29
 {245, 30, 0, 0}, //11:30
 {245, 29, 0, 0}, //11:31
 {245, 28, 0, 0}, //11:32
 {245, 27, 0, 0}, //11:33
 {245, 26, 0, 0}, //11:34
 {245, 25, 0, 0}, //11:35
 {246, 24, 0, 0}, //11:36
 {246, 23, 0, 0}, //11:37
 {246, 22, 0, 0}, //11:38
 {246, 21, 0, 0}, //11:39
 {246, 20, 0, 0}, //11:40
 {246, 19, 0, 0}, //11:41
 {247, 18, 0, 0}, //11:42
 {247, 17, 0, 0}, //11:43
 {247, 16, 0, 0}, //11:44
 {247, 15, 0, 0}, //11:45
 {247, 14, 0, 0}, //11:46
 {247, 13, 0, 0}, //11:47
 {248, 12, 0, 0}, //11:48
 {248, 11, 0, 0}, //11:49
 {248, 10, 0, 0}, //11:50
 {248, 9, 0, 0}, //11:51
 {248, 8, 0, 0}, //11:52
 {248, 7, 0, 0}, //11:53
 {249, 6, 0, 0}, //11:54
 {249, 5, 0, 0}, //11:55
 {249, 4, 0, 0}, //11:56
 {249, 3, 0, 0}, //11:57
 {249, 2, 0, 0}, //11:58
 {249, 1, 0, 0}, //11:59

 {250, 0, 0, 0}, //12:00
 {250, 0, 0, 0}, //12:01
 {250, 0, 0, 0}, //12:02
 {250, 0, 0, 0}, //12:03
 {250, 0, 0, 0}, //12:04
 {250, 0, 0, 0}, //12:05
 {250, 0, 0, 0}, //12:06
 {250, 0, 0, 0}, //12:07
 {250, 0, 0, 0}, //12:08
 {250, 0, 0, 0}, //12:09
 {250, 0, 0, 0}, //12:10
 {250, 0, 0, 0}, //12:11
 {250, 0, 0, 0}, //12:12
 {250, 0, 0, 0}, //12:13
 {250, 0, 0, 0}, //12:14
 {250, 0, 0, 0}, //12:15
 {250, 0, 0, 0}, //12:16
 {250, 0, 0, 0}, //12:17
 {250, 0, 0, 0}, //12:18
 {250, 0, 0, 0}, //12:19
 {250, 0, 0, 0}, //12:20
 {250, 0, 0, 0}, //12:21
 {250, 0, 0, 0}, //12:22
 {250, 0, 0, 0}, //12:23
 {250, 0, 0, 0}, //12:24
 {250, 0, 0, 0}, //12:25
 {250, 0, 0, 0}, //12:26
 {250, 0, 0, 0}, //12:27
 {250, 0, 0, 0}, //12:28
 {250, 0, 0, 0}, //12:29
 {250, 0, 0, 0}, //12:30
 {250, 0, 0, 0}, //12:31
 {250, 0, 0, 0}, //12:32
 {250, 0, 0, 0}, //12:33
 {250, 0, 0, 0}, //12:34
 {250, 0, 0, 0}, //12:35
 {250, 0, 0, 0}, //12:36
 {250, 0, 0, 0}, //12:37
 {250, 0, 0, 0}, //12:38
 {250, 0, 0, 0}, //12:39
 {250, 0, 0, 0}, //12:40
 {250, 0, 0, 0}, //12:41
 {250, 0, 0, 0}, //12:42
 {250, 0, 0, 0}, //12:43
 {250, 0, 0, 0}, //12:44
 {250, 0, 0, 0}, //12:45
 {250, 0, 0, 0}, //12:46
 {250, 0, 0, 0}, //12:47
 {250, 0, 0, 0}, //12:48
 {250, 0, 0, 0}, //12:49
 {250, 0, 0, 0}, //12:50
 {250, 0, 0, 0}, //12:51
 {250, 0, 0, 0}, //12:52
 {250, 0, 0, 0}, //12:53
 {250, 0, 0, 0}, //12:54
 {250, 0, 0, 0}, //12:55
 {250, 0, 0, 0}, //12:56
 {250, 0, 0, 0}, //12:57
 {250, 0, 0, 0}, //12:58
 {250, 0, 0, 0}, //12:59

 {250, 0, 0, 0}, //13:00
 {250, 0, 0, 0}, //13:01
 {250, 0, 0, 0}, //13:02
 {250, 0, 0, 0}, //13:03
 {250, 0, 0, 0}, //13:04
 {250, 0, 0, 0}, //13:05
 {250, 0, 0, 0}, //13:06
 {250, 0, 0, 0}, //13:07
 {250, 0, 0, 0}, //13:08
 {250, 0, 0, 0}, //13:09
 {250, 0, 0, 0}, //13:10
 {250, 0, 0, 0}, //13:11
 {250, 0, 0, 0}, //13:12
 {250, 0, 0, 0}, //13:13
 {250, 0, 0, 0}, //13:14
 {250, 0, 0, 0}, //13:15
 {250, 0, 0, 0}, //13:16
 {250, 0, 0, 0}, //13:17
 {250, 0, 0, 0}, //13:18
 {250, 0, 0, 0}, //13:19
 {250, 0, 0, 0}, //13:20
 {250, 0, 0, 0}, //13:21
 {250, 0, 0, 0}, //13:22
 {250, 0, 0, 0}, //13:23
 {250, 0, 0, 0}, //13:24
 {250, 0, 0, 0}, //13:25
 {250, 0, 0, 0}, //13:26
 {250, 0, 0, 0}, //13:27
 {250, 0, 0, 0}, //13:28
 {250, 0, 0, 0}, //13:29
 {250, 0, 0, 0}, //13:30
 {250, 0, 0, 0}, //13:31
 {250, 0, 0, 0}, //13:32
 {250, 0, 0, 0}, //13:33
 {250, 0, 0, 0}, //13:34
 {250, 0, 0, 0}, //13:35
 {250, 0, 0, 0}, //13:36
 {250, 0, 0, 0}, //13:37
 {250, 0, 0, 0}, //13:38
 {250, 0, 0, 0}, //13:39
 {250, 0, 0, 0}, //13:40
 {250, 0, 0, 0}, //13:41
 {250, 0, 0, 0}, //13:42
 {250, 0, 0, 0}, //13:43
 {250, 0, 0, 0}, //13:44
 {250, 0, 0, 0}, //13:45
 {250, 0, 0, 0}, //13:46
 {250, 0, 0, 0}, //13:47
 {250, 0, 0, 0}, //13:48
 {250, 0, 0, 0}, //13:49
 {250, 0, 0, 0}, //13:50
 {250, 0, 0, 0}, //13:51
 {250, 0, 0, 0}, //13:52
 {250, 0, 0, 0}, //13:53
 {250, 0, 0, 0}, //13:54
 {250, 0, 0, 0}, //13:55
 {250, 0, 0, 0}, //13:56
 {250, 0, 0, 0}, //13:57
 {250, 0, 0, 0}, //13:58
 {250, 0, 0, 0}, //13:59

 {250, 0, 0, 0}, //14:00
 {249, 3, 0, 0}, //14:01
 {248, 6, 0, 0}, //14:02
 {247, 9, 0, 0}, //14:03
 {246, 12, 0, 0}, //14:04
 {245, 15, 0, 0}, //14:05
 {244, 18, 0, 0}, //14:06
 {243, 21, 0, 0}, //14:07
 {242, 24, 0, 0}, //14:08
 {241, 27, 0, 0}, //14:09
 {240, 30, 0, 0}, //14:10
 {239, 33, 0, 0}, //14:11
 {238, 36, 0, 0}, //14:12
 {237, 39, 0, 0}, //14:13
 {236, 42, 0, 0}, //14:14
 {235, 45, 0, 0}, //14:15
 {234, 48, 0, 0}, //14:16
 {233, 51, 0, 0}, //14:17
 {232, 54, 0, 0}, //14:18
 {231, 57, 0, 0}, //14:19
 {230, 60, 0, 0}, //14:20
 {229, 63, 0, 0}, //14:21
 {228, 66, 0, 0}, //14:22
 {227, 69, 0, 0}, //14:23
 {226, 72, 0, 0}, //14:24
 {225, 75, 0, 0}, //14:25
 {224, 78, 0, 0}, //14:26
 {223, 81, 0, 0}, //14:27
 {222, 84, 0, 0}, //14:28
 {221, 87, 0, 0}, //14:29
 {220, 90, 0, 0}, //14:30
 {219, 93, 0, 0}, //14:31
 {218, 96, 0, 0}, //14:32
 {217, 99, 0, 0}, //14:33
 {216, 102, 0, 0}, //14:34
 {215, 105, 0, 0}, //14:35
 {214, 108, 0, 0}, //14:36
 {213, 112, 0, 0}, //14:37
 {212, 115, 0, 0}, //14:38
 {211, 118, 0, 0}, //14:39
 {210, 121, 0, 0}, //14:40
 {209, 124, 0, 0}, //14:41
 {208, 127, 0, 0}, //14:42
 {207, 130, 0, 0}, //14:43
 {206, 133, 0, 0}, //14:44
 {205, 136, 0, 0}, //14:45
 {204, 139, 0, 0}, //14:46
 {203, 142, 0, 0}, //14:47
 {202, 145, 0, 0}, //14:48
 {201, 148, 0, 0}, //14:49
 {200, 151, 0, 0}, //14:50
 {199, 154, 0, 0}, //14:51
 {198, 157, 0, 0}, //14:52
 {197, 160, 0, 0}, //14:53
 {196, 163, 0, 0}, //14:54
 {195, 166, 0, 0}, //14:55
 {194, 169, 0, 0}, //14:56
 {193, 172, 0, 0}, //14:57
 {192, 175, 0, 0}, //14:58
 {191, 178, 0, 0}, //14:59

 {190, 180, 0, 0}, //15:00
 {187, 181, 0, 0}, //15:01
 {184, 182, 0, 0}, //15:02
 {181, 183, 0, 0}, //15:03
 {178, 184, 0, 0}, //15:04
 {175, 185, 0, 0}, //15:05
 {172, 186, 0, 0}, //15:06
 {169, 187, 0, 0}, //15:07
 {166, 188, 0, 0}, //15:08
 {163, 189, 0, 0}, //15:09
 {160, 190, 0, 0}, //15:10
 {157, 191, 0, 0}, //15:11
 {154, 192, 0, 0}, //15:12
 {151, 193, 0, 0}, //15:13
 {148, 194, 0, 0}, //15:14
 {145, 195, 0, 0}, //15:15
 {142, 196, 0, 0}, //15:16
 {139, 197, 0, 0}, //15:17
 {136, 198, 0, 0}, //15:18
 {133, 199, 0, 0}, //15:19
 {130, 200, 0, 0}, //15:20
 {127, 201, 0, 0}, //15:21
 {124, 202, 0, 0}, //15:22
 {121, 203, 0, 0}, //15:23
 {118, 204, 0, 0}, //15:24
 {115, 205, 0, 0}, //15:25
 {112, 206, 0, 0}, //15:26
 {109, 207, 0, 0}, //15:27
 {106, 208, 0, 0}, //15:28
 {103, 209, 0, 0}, //15:29
 {100, 210, 0, 0}, //15:30
 {97, 211, 0, 0}, //15:31
 {94, 212, 0, 0}, //15:32
 {91, 213, 0, 0}, //15:33
 {88, 214, 0, 0}, //15:34
 {85, 215, 0, 0}, //15:35
 {82, 216, 0, 0}, //15:36
 {79, 218, 0, 0}, //15:37
 {76, 219, 0, 0}, //15:38
 {73, 220, 0, 0}, //15:39
 {70, 221, 0, 0}, //15:40
 {67, 222, 0, 0}, //15:41
 {64, 223, 0, 0}, //15:42
 {61, 224, 0, 0}, //15:43
 {58, 225, 0, 0}, //15:44
 {55, 226, 0, 0}, //15:45
 {52, 227, 0, 0}, //15:46
 {49, 228, 0, 0}, //15:47
 {45, 229, 0, 0}, //15:48
 {41, 230, 0, 0}, //15:49
 {37, 232, 0, 0}, //15:50
 {33, 234, 0, 0}, //15:51
 {29, 236, 0, 0}, //15:52
 {25, 238, 0, 0}, //15:53
 {21, 240, 0, 0}, //15:54
 {17, 242, 0, 0}, //15:55
 {13, 244, 0, 0}, //15:56
 {9, 246, 0, 0}, //15:57
 {5, 248, 0, 0}, //15:58
 {3, 250, 0, 0}, //15:59

 {0, 250, 0, 0}, //16:00
 {0, 246, 3, 0}, //16:01
 {0, 242, 6, 0}, //16:02
 {0, 238, 9, 0}, //16:03
 {0, 234, 12, 0}, //16:04
 {0, 230, 15, 0}, //16:05
 {0, 228, 18, 0}, //16:06
 {0, 224, 21, 0}, //16:07
 {0, 220, 24, 0}, //16:08
 {0, 216, 27, 0}, //16:09
 {0, 212, 30, 0}, //16:10
 {0, 208, 33, 0}, //16:11
 {0, 204, 36, 0}, //16:12
 {0, 200, 39, 0}, //16:13
 {0, 196, 42, 0}, //16:14
 {0, 192, 45, 0}, //16:15
 {0, 188, 48, 0}, //16:16
 {0, 184, 51, 0}, //16:17
 {0, 180, 54, 0}, //16:18
 {0, 176, 57, 0}, //16:19
 {0, 172, 60, 0}, //16:20
 {0, 168, 63, 0}, //16:21
 {0, 164, 64, 0}, //16:22
 {0, 160, 67, 0}, //16:23
 {0, 156, 70, 0}, //16:24
 {0, 152, 73, 0}, //16:25
 {0, 148, 76, 0}, //16:26
 {0, 144, 79, 0}, //16:27
 {0, 140, 82, 0}, //16:28
 {0, 136, 85, 0}, //16:29
 {0, 132, 88, 0}, //16:30
 {0, 128, 91, 0}, //16:31
 {0, 124, 94, 0}, //16:32
 {0, 120, 97, 0}, //16:33
 {0, 116, 100, 0}, //16:34
 {0, 112, 103, 0}, //16:35
 {0, 108, 106, 0}, //16:36
 {0, 104, 109, 0}, //16:37
 {0, 100, 110, 0}, //16:38
 {0, 96, 113, 0}, //16:39
 {0, 92, 116, 0}, //16:40
 {0, 88, 119, 0}, //16:41
 {0, 84, 122, 0}, //16:42
 {0, 80, 125, 0}, //16:43
 {0, 76, 128, 0}, //16:44
 {0, 72, 131, 0}, //16:45
 {0, 68, 134, 0}, //16:46
 {0, 64, 137, 0}, //16:47
 {0, 60, 140, 0}, //16:48
 {0, 56, 143, 0}, //16:49
 {0, 52, 146, 0}, //16:50
 {0, 47, 150, 0}, //16:51
 {0, 42, 154, 0}, //16:52
 {0, 37, 158, 0}, //16:53
 {0, 32, 162, 0}, //16:54
 {0, 27, 166, 0}, //16:55
 {0, 22, 170, 0}, //16:56
 {0, 17, 174, 0}, //16:57
 {0, 12, 178, 0}, //16:58
 {0, 6, 180, 0}, //16:59

 {0, 0, 180, 0}, //17:00
 {0, 0, 178, 0}, //17:01
 {0, 0, 176, 1}, //17:02
 {0, 0, 174, 1}, //17:03
 {0, 0, 172, 2}, //17:04
 {0, 0, 170, 2}, //17:05
 {0, 0, 168, 3}, //17:06
 {0, 0, 166, 3}, //17:07
 {0, 0, 164, 4}, //17:08
 {0, 0, 162, 4}, //17:09
 {0, 0, 160, 5}, //17:10
 {0, 0, 158, 5}, //17:11
 {0, 0, 156, 6}, //17:12
 {0, 0, 154, 6}, //17:13
 {0, 0, 152, 7}, //17:14
 {0, 0, 150, 7}, //17:15
 {0, 0, 148, 8}, //17:16
 {0, 0, 146, 8}, //17:17
 {0, 0, 144, 9}, //17:18
 {0, 0, 142, 9}, //17:19
 {0, 0, 140, 10}, //17:20
 {0, 0, 138, 10}, //17:21
 {0, 0, 136, 11}, //17:22
 {0, 0, 134, 11}, //17:23
 {0, 0, 132, 12}, //17:24
 {0, 0, 130, 12}, //17:25
 {0, 0, 128, 13}, //17:26
 {0, 0, 126, 13}, //17:27
 {0, 0, 124, 14}, //17:28
 {0, 0, 122, 14}, //17:29
 {0, 0, 120, 15}, //17:30
 {0, 0, 118, 15}, //17:31
 {0, 0, 116, 16}, //17:32
 {0, 0, 114, 16}, //17:33
 {0, 0, 112, 17}, //17:34
 {0, 0, 110, 17}, //17:35
 {0, 0, 108, 18}, //17:36
 {0, 0, 106, 18}, //17:37
 {0, 0, 104, 19}, //17:38
 {0, 0, 102, 19}, //17:39
 {0, 0, 100, 20}, //17:40
 {0, 0, 98, 20}, //17:41
 {0, 0, 96, 21}, //17:42
 {0, 0, 94, 22}, //17:43
 {0, 0, 92, 23}, //17:44
 {0, 0, 90, 24}, //17:45
 {0, 0, 88, 25}, //17:46
 {0, 0, 86, 26}, //17:47
 {0, 0, 84, 27}, //17:48
 {0, 0, 82, 28}, //17:49
 {0, 0, 80, 29}, //17:50
 {0, 0, 78, 30}, //17:51
 {0, 0, 76, 31}, //17:52
 {0, 0, 74, 32}, //17:53
 {0, 0, 72, 33}, //17:54
 {0, 0, 70, 34}, //17:55
 {0, 0, 68, 35}, //17:56
 {0, 0, 66, 36}, //17:57
 {0, 0, 64, 37}, //17:58
 {0, 0, 62, 38}, //17:59

 {0, 0, 60, 40}, //18:00
 {0, 0, 59, 40}, //18:01
 {0, 0, 58, 39}, //18:02
 {0, 0, 57, 39}, //18:03
 {0, 0, 56, 38}, //18:04
 {0, 0, 55, 38}, //18:05
 {0, 0, 54, 37}, //18:06
 {0, 0, 53, 37}, //18:07
 {0, 0, 52, 36}, //18:08
 {0, 0, 51, 36}, //18:09
 {0, 0, 50, 35}, //18:10
 {0, 0, 49, 35}, //18:11
 {0, 0, 48, 34}, //18:12
 {0, 0, 47, 34}, //18:13
 {0, 0, 46, 33}, //18:14
 {0, 0, 45, 33}, //18:15
 {0, 0, 44, 32}, //18:16
 {0, 0, 43, 32}, //18:17
 {0, 0, 42, 31}, //18:18
 {0, 0, 41, 31}, //18:19
 {0, 0, 40, 30}, //18:20
 {0, 0, 39, 30}, //18:21
 {0, 0, 38, 29}, //18:22
 {0, 0, 37, 29}, //18:23
 {0, 0, 36, 28}, //18:24
 {0, 0, 35, 28}, //18:25
 {0, 0, 34, 27}, //18:26
 {0, 0, 33, 27}, //18:27
 {0, 0, 32, 26}, //18:28
 {0, 0, 31, 26}, //18:29
 {0, 0, 30, 25}, //18:30
 {0, 0, 29, 25}, //18:31
 {0, 0, 28, 24}, //18:32
 {0, 0, 27, 24}, //18:33
 {0, 0, 26, 23}, //18:34
 {0, 0, 25, 23}, //18:35
 {0, 0, 24, 22}, //18:36
 {0, 0, 23, 22}, //18:37
 {0, 0, 22, 21}, //18:38
 {0, 0, 21, 21}, //18:39
 {0, 0, 20, 20}, //18:40
 {0, 0, 19, 20}, //18:41
 {0, 0, 18, 19}, //18:42
 {0, 0, 17, 18}, //18:43
 {0, 0, 16, 17}, //18:44
 {0, 0, 15, 16}, //18:45
 {0, 0, 14, 15}, //18:46
 {0, 0, 13, 14}, //18:47
 {0, 0, 12, 13}, //18:48
 {0, 0, 11, 12}, //18:49
 {0, 0, 10, 11}, //18:50
 {0, 0, 9, 10}, //18:51
 {0, 0, 8, 9}, //18:52
 {0, 0, 7, 8}, //18:53
 {0, 0, 6, 7}, //18:54
 {0, 0, 5, 6}, //18:55
 {0, 0, 4, 5}, //18:56
 {0, 0, 3, 4}, //18:57
 {0, 0, 2, 3}, //18:58
 {0, 0, 1, 2}, //18:59

 {0, 0, 0, 0}, //19:00
};

// 展式模式相關函數
int delay_per_minute;

void setup() {
  Serial.begin(9600);

  // RTC initialization
  if (!rtc.begin()) {
    Serial.println("Couldn't find RTC");
    while (1);
  }
  if (rtc.lostPower()) {
    Serial.println("RTC lost power, let's set the time!");
    rtc.adjust(DateTime(F(__DATE__), F(__TIME__)));
  }

  // Bluetooth initialization
  ESP_BT.begin("bluetooth_connect");
  // 加入一些延遲，確保BluetoothSerial正確初始化
  delay(1000);

  // pin mode setting
  pinMode(ledPin_yellow, OUTPUT);
  pinMode(ledPin_green, OUTPUT);
  pinMode(ledPin_red, OUTPUT);
  pinMode(ledPin_other, OUTPUT);

  // 在 setup 函數中創建一個任務，並指定它在 core 1 上運行
  xTaskCreatePinnedToCore(
    showmodeTaskFunction,   // 任務的函數
    "showmodeTask",         // 任務名稱
    10000,                    // 堆棧大小
    NULL,                     // 參數
    1,                        // 優先級
    &showmodeTask,          // 任務句柄
    1                         // 核心編號（0或1）
  );

  Serial.println("setup completed");
}


void loop() {
  if (ESP_BT.available()) {
    // byte buffer[2];
    // ESP_BT.readBytes(buffer, 2);
    input = Bytes2num_to_int();
    // 手機傳輸資料類型(模式) / 資料值(模式設定)
    inputType = input / 100;
    value = input % 100;

    Serial.print("mode: "); 
    Serial.println(inputType);

    //mode recognition
    switch (inputType) {
      //RTC與手機同步時間, app詳見[BT_list.AfterPicking] block
      case 1:  
        Serial.println("synchronize time");
        // 接收來自app的Bytes list 資料
        byte currentTime[8];
        ESP_BT.readBytes(currentTime, 8);
        for (int i=0; i<6; i++){
          Serial.println(currentTime[i]);
        }

        // 設定RTC日期, 時間
        rtc.adjust(DateTime(2000+currentTime[0], currentTime[1], currentTime[2], currentTime[3], currentTime[4], currentTime[5]));

        Serial.println("synchronize time completed");
        print_current_time();
        break;


      // 節律模式開 / 關
      // 不在此做四色光的更新, 改在switch後執行 if(circadianMode)...
      case 2:  
        if (value == 1) {
          circadianMode = true;
          Serial.println("open circadian mode");
        }
        else {
          circadianMode = false;
          // write_four_pin(0,0,0,0);   不知要不要加 沒事可刪?????????
          // analogWrite(ledPin_yellow, 0);  delete
          // analogWrite(ledPin_green, 0);
          // analogWrite(ledPin_red, 0);
          // analogWrite(ledPin_other, 0);
          Serial.println("close circadian mode");
        }

        break;


      // 獨立控制模式
      case 3:  
        Serial.println("open control mode");
        byte fourPinvalue[4];
        ESP_BT.readBytes(fourPinvalue, 4);
        for (int i=0; i<4; i++){
          Serial.println(fourPinvalue[i]);
        }

        write_four_pin(fourPinvalue[0], fourPinvalue[1], fourPinvalue[2], fourPinvalue[3]);
        // analogWrite(ledPin_yellow, fourPinvalue[0]);  delete
        // analogWrite(ledPin_green, fourPinvalue[1]);
        // analogWrite(ledPin_red, fourPinvalue[2]);
        // analogWrite(ledPin_other, fourPinvalue[3]);

        break;


      // 循環展示模式
      // 循環中隨時監聽中斷訊號
      // 401 開啟循環模式 / 400關閉循環模式
      case 4:  
        if (value == 1) {
          Serial.println("open show mode");

          // 接收循環時間
          lifeTime = Bytes2num_to_int();
          Serial.print("循環時間: ");
          Serial.print(lifeTime);
          Serial.println(" 秒");
          // delay per minute
          int rows = sizeof(cmode) / sizeof(cmode[0]);
          delay_per_minute = lifeTime * 1000 / rows;
          // Serial.println(delay_per_minute);

          // 副任務判斷執行與否之旗幟, 設否為不中斷, 執行副任務
          shouldExitBluetoothTask = false;
        }
        else if (value == 0) {
          Serial.println("interrupt show mode");
          // 副任務判斷執行與否之旗幟
          shouldExitBluetoothTask = true;
        }

        break;


      // 調整色溫、亮度模式
      case 5:
        Serial.println("open color mode");
        byte light_color_setting[3];
        ESP_BT.readBytes(light_color_setting, 3);
        for (int i=0; i<3; i++) {
          Serial.println(light_color_setting[i]);
        }
        int inputcolorTemp = light_color_setting[0] * 100 + light_color_setting[1];
        int fourPin[4];
        get_pin_val_from_lightcolor(fourPin, inputcolorTemp, light_color_setting[2]);   // 色溫, 亮度    
        write_four_pin(fourPin[0], fourPin[1], fourPin[2], fourPin[3]);

        // Serial.println("色溫 亮度:");
        // Serial.println(inputcolorTemp);
        // Serial.println(light_color_setting[2]);
        Serial.println("燈珠pin值:");
        Serial.println(fourPin[0]);
        Serial.println(fourPin[1]);
        Serial.println(fourPin[2]);
        Serial.println(fourPin[3]);

        break;

    }
  }

  // 若打開節律模式, 則執行以下, 實現四色光隨RTC時間變色
  if (circadianMode) {
    getCurrentTime(hours, minutes);
    // 印出時間
    Serial.print("Current Time: ");
    Serial.print(hours);
    Serial.print(":");
    Serial.println(minutes);

    if (hours >= 6 && hours < 19) {
      settingRow = (hours-6) * 60 + minutes;
      write_four_pin(cmode[settingRow][0], cmode[settingRow][1], cmode[settingRow][2], cmode[settingRow][3]);
      // analogWrite(ledPin_yellow, cmode[settingRow][0]);  delete
      // analogWrite(ledPin_green, cmode[settingRow][1]);
      // analogWrite(ledPin_red, cmode[settingRow][2]);
      // analogWrite(ledPin_other, cmode[settingRow][3]);
      Serial.println("update circadian light, pin value: ");

      // Serial.println(settingRow);
      // Serial.println(cmode[settingRow][0]);
      // Serial.println(cmode[settingRow][1]);
      // Serial.println(cmode[settingRow][2]);
      // Serial.println(cmode[settingRow][3]);
    }
    else {
      write_four_pin(0,0,0,0);
      // analogWrite(ledPin_yellow, 0);  delete
      // analogWrite(ledPin_green, 0);
      // analogWrite(ledPin_red, 0);
      // analogWrite(ledPin_other, 0);
      Serial.println("now is at circadian night");
    }
    delay(1000);
  }


}


// 讀取RTC現在時間的函數
void getCurrentTime(int &hours, int &minutes) {
  DateTime now = rtc.now();
  hours = now.hour();
  minutes = now.minute();
}


int Bytes2num_to_int() {
  int input;
  byte buffer[2];
  ESP_BT.readBytes(buffer, 2);
  input = (buffer[1] << 8) | buffer[0];
  return input;
}


void print_current_time() {
  getCurrentTime(hours, minutes);
  Serial.print(hours);
  Serial.print(":");
  Serial.println(minutes);
}